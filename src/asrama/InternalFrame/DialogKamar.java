/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package asrama.InternalFrame;

import com.sun.glass.events.KeyEvent;
import java.awt.Frame;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import asrama.connect_DB;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 *
 */
public final class DialogKamar extends javax.swing.JDialog {

    Connection conn = new connect_DB().db_connection();
    static String status_dialog = "";
    static String static_kamar_id_old;
    
    public DialogKamar() {
        super(new Frame(),"Detail Kamar",true);
        initComponents();
        if(status_dialog.equalsIgnoreCase("new")){
            createIDKamar();
        }else if (status_dialog.equalsIgnoreCase("edit")){
            getDetailKamar();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        KamarID = new javax.swing.JTextField();
        KamarCode = new javax.swing.JTextField();
        KamarName = new javax.swing.JTextField();
        description = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cbStatus = new javax.swing.JComboBox<>();
        cbKategori = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        buttonSave = new javax.swing.JButton();
        buttonClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Detil Kamar");

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("ID Kamar");

        jLabel2.setText("Kode Kamar");

        jLabel3.setText("Nama Kamar ");

        jLabel4.setText("Deskripsi  ");

        KamarID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                KamarIDKeyPressed(evt);
            }
        });

        KamarCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                KamarCodeKeyPressed(evt);
            }
        });

        KamarName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                KamarNameKeyPressed(evt);
            }
        });

        description.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                descriptionKeyPressed(evt);
            }
        });

        jLabel5.setText("Status ");

        jLabel6.setText("Kategori ");

        cbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kosong", "Isi" }));

        cbKategori.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Anggota", "Tamu" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(KamarID)
                    .addComponent(KamarName, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(description, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(KamarCode, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(cbStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbKategori, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addContainerGap(172, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(KamarID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(KamarCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(KamarName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(description, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7)
                            .addComponent(cbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addComponent(jLabel6))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 210, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(cbKategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        jPanel1.add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setPreferredSize(new java.awt.Dimension(400, 50));

        buttonSave.setText("Save");
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });
        jPanel3.add(buttonSave);

        buttonClose.setText("Close");
        buttonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCloseActionPerformed(evt);
            }
        });
        jPanel3.add(buttonClose);

        jPanel1.add(jPanel3, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void KamarIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_KamarIDKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            KamarCode.selectAll();
            KamarCode.requestFocus();
        }
    }//GEN-LAST:event_KamarIDKeyPressed

    private void KamarCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_KamarCodeKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            KamarName.selectAll();
            KamarName.requestFocus();
        }
    }//GEN-LAST:event_KamarCodeKeyPressed

    private void KamarNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_KamarNameKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            description.selectAll();
            description.requestFocus();
        }
    }//GEN-LAST:event_KamarNameKeyPressed

    private void descriptionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descriptionKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            description.selectAll();
            description.requestFocus();
        }
    }//GEN-LAST:event_descriptionKeyPressed

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
        if(status_dialog.equalsIgnoreCase("new")){
            try {
                SaveNewKamar();
            } catch (SQLException ex) {
                Logger.getLogger(DialogKamar.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if (status_dialog.equalsIgnoreCase("edit")){
            SaveEditKamar();
        }
        dispose();
    }//GEN-LAST:event_buttonSaveActionPerformed

    private void buttonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCloseActionPerformed
        dispose();
    }//GEN-LAST:event_buttonCloseActionPerformed

    public void createIDKamar(){
        try {
            String sql = "select coalesce(max(kamar_id)+1,3010001) as max_kamar_id from kamar";
            ResultSet rs = conn.createStatement().executeQuery(sql);
            if(rs.next()){
                KamarID.setText(rs.getString("max_kamar_id"));
            }
        }catch(Exception e){e.printStackTrace();}
    }
    
    public void SaveNewKamar() throws SQLException{
        if (!"".equals(KamarCode.getText()) &&
            !"".equals(KamarName.getText()) &&
            !"".equals(description.getText()) &&
            cbStatus.getSelectedItem().toString()!= "" &&
            cbKategori.getSelectedItem().toString() != "") {
            String sql = "insert into kamar values (?,?,?,?,?,?)";
            PreparedStatement ps = conn.prepareStatement(sql);
            try {
                ps.setString(1, KamarID.getText());
                ps.setString(2, KamarCode.getText());
                ps.setString(3, KamarName.getText());
                ps.setString(4, description.getText());
                ps.setString(5, cbStatus.getSelectedItem().toString());
                ps.setString(6, cbKategori.getSelectedItem().toString());
                ps.executeUpdate();
                JOptionPane.showMessageDialog(rootPane, "Data Berhasil Disimpan");
            }catch(Exception e){e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Data ada yang salah, Data Gagal Disimpan");
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Data Gagal Disimpan");
        }
    }
    
    public void SaveEditKamar(){
        try {
            String sql = "update kamar set kamar_id=?,kamar_code=?,kamar_name=?,description=?,status=?,kategori=?"
                    + "where kamar_id='"+static_kamar_id_old+"'";
            PreparedStatement ps = conn.prepareStatement(sql);
            try {
                ps.setString(1, KamarID.getText());
                ps.setString(2, KamarCode.getText());
                ps.setString(3, KamarName.getText());
                ps.setString(4, description.getText());
                ps.setString(5, cbStatus.getSelectedItem().toString());
                ps.setString(6, cbKategori.getSelectedItem().toString());
                ps.executeUpdate();
                JOptionPane.showMessageDialog(rootPane, "Data Berhasil Diedit");
            }catch(Exception e){e.printStackTrace();}
        }catch(Exception e){e.printStackTrace();}
    }
    
    public void getDetailKamar(){
        try{
            String sql = "select *from kamar where kamar_id='"+static_kamar_id_old+"'";
            ResultSet rs = conn.createStatement().executeQuery(sql);
            while(rs.next()){
                KamarID.setText(rs.getString("kamar_id"));
                KamarCode.setText(rs.getString("kamar_code"));
                KamarName.setText(rs.getString("kamar_name"));
                description.setText(rs.getString("description"));
                cbStatus.setSelectedItem(rs.getString("status"));
                cbKategori.setSelectedItem(rs.getString("kategori"));
            }
        }catch(Exception e){e.printStackTrace();}
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField KamarCode;
    public static javax.swing.JTextField KamarID;
    private javax.swing.JTextField KamarName;
    private javax.swing.JButton buttonClose;
    private javax.swing.JButton buttonSave;
    private javax.swing.JComboBox<String> cbKategori;
    private javax.swing.JComboBox<String> cbStatus;
    private javax.swing.JTextField description;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
}
