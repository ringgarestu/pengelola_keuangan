/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package asrama.InternalFrame;

import static asrama.InternalFrame.DialogKamar.IDKamar;
import static asrama.InternalFrame.DialogKamar.static_kamar_id_old;
import com.sun.glass.events.KeyEvent;
import java.awt.Frame;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import asrama.connect_DB;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author USER
 */
public class DialogKamarTamu extends javax.swing.JDialog {
Connection conn = new connect_DB().db_connection();
    static String status_dialog = "";
    static String static_kamar_id_old;
    
    public DialogKamarTamu() {
        super(new Frame(),"Detail Kamar Tamu",true);
        initComponents();
        if(status_dialog.equalsIgnoreCase("new")){
            createIDKamarTamu();
        }else if (status_dialog.equalsIgnoreCase("edit")){
            getDetailKamarTamu();
        }
    }
    /**
     * Creates new form DialogKamarTamu
     */
    public DialogKamarTamu(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        buttonSave = new javax.swing.JButton();
        buttonClose = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        IDKamar = new javax.swing.JTextField();
        KodeKamarTamu = new javax.swing.JTextField();
        NamaKamarTamu = new javax.swing.JTextField();
        description = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cbStatus = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setPreferredSize(new java.awt.Dimension(400, 50));

        buttonSave.setText("Save Tamu");
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });
        jPanel3.add(buttonSave);

        buttonClose.setText("Close");
        buttonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCloseActionPerformed(evt);
            }
        });
        jPanel3.add(buttonClose);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("ID Kamar");

        jLabel2.setText("Kode Kamar");

        jLabel3.setText("Nama Kamar ");

        jLabel4.setText("Deskripsi  ");

        IDKamar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                IDKamarKeyPressed(evt);
            }
        });

        KodeKamarTamu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                KodeKamarTamuKeyPressed(evt);
            }
        });

        NamaKamarTamu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                NamaKamarTamuKeyPressed(evt);
            }
        });

        description.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                descriptionKeyPressed(evt);
            }
        });

        jLabel5.setText("Status ");

        cbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kosong", "Isi" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(IDKamar)
                    .addComponent(NamaKamarTamu)
                    .addComponent(description)
                    .addComponent(KodeKamarTamu)
                    .addComponent(cbStatus, 0, 140, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addContainerGap(172, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(IDKamar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(KodeKamarTamu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(NamaKamarTamu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(description, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7)
                            .addComponent(cbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 46, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel8)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 427, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 301, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 3, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, 0)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 3, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
        if(status_dialog.equalsIgnoreCase("new")){
            try {
                SaveNewKamarTamu();
            } catch (SQLException ex) {
                Logger.getLogger(DialogKamarTamu.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if (status_dialog.equalsIgnoreCase("edit")){
            SaveEditKamarTamu();
        }
        dispose();
    }//GEN-LAST:event_buttonSaveActionPerformed

    private void buttonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCloseActionPerformed
        dispose();
    }//GEN-LAST:event_buttonCloseActionPerformed

    private void IDKamarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_IDKamarKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            KodeKamarTamu.selectAll();
            KodeKamarTamu.requestFocus();
        }
    }//GEN-LAST:event_IDKamarKeyPressed

    private void KodeKamarTamuKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_KodeKamarTamuKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            NamaKamarTamu.selectAll();
            NamaKamarTamu.requestFocus();
        }
    }//GEN-LAST:event_KodeKamarTamuKeyPressed

    private void NamaKamarTamuKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NamaKamarTamuKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            description.selectAll();
            description.requestFocus();
        }
    }//GEN-LAST:event_NamaKamarTamuKeyPressed

    private void descriptionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descriptionKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            description.selectAll();
            description.requestFocus();
        }
    }//GEN-LAST:event_descriptionKeyPressed
public void createIDKamarTamu(){
        try {
            String sql = "select coalesce(max(kamar_id)+1,4010001) as max_kamar_id from kamartamu";
            ResultSet rs = conn.createStatement().executeQuery(sql);
            if(rs.next()){
                IDKamar.setText(rs.getString("max_kamar_id"));
            }
        }catch(Exception e){e.printStackTrace();}
    }
    
    public void SaveNewKamarTamu() throws SQLException{
        if (!"".equals(KodeKamarTamu.getText()) &&
            !"".equals(NamaKamarTamu.getText()) &&
            !"".equals(description.getText()) &&
            cbStatus.getSelectedItem().toString()!= ""){
            String sql = "insert into kamartamu values (?,?,?,?,?)";
            PreparedStatement ps = conn.prepareStatement(sql);
            try {
                ps.setString(1, IDKamar.getText());
                ps.setString(2, KodeKamarTamu.getText());
                ps.setString(3, NamaKamarTamu.getText());
                ps.setString(4, description.getText());
                ps.setString(5, cbStatus.getSelectedItem().toString());
                ps.executeUpdate();
                JOptionPane.showMessageDialog(rootPane, "Data Berhasil Disimpan");
            }catch(Exception e){e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Data ada yang salah, Data Gagal Disimpan");
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Data Gagal Disimpan");
        }
    }
    
    public void SaveEditKamarTamu(){
        try {
            String sql = "update kamartamu set kamar_id=?,kamar_code=?,kamar_name=?,description=?,status=?,kategori=?"
                    + "where kamar_id='"+static_kamar_id_old+"'";
            PreparedStatement ps = conn.prepareStatement(sql);
            try {
                ps.setString(1, IDKamar.getText());
                ps.setString(2, KodeKamarTamu.getText());
                ps.setString(3, NamaKamarTamu.getText());
                ps.setString(4, description.getText());
                ps.setString(5, cbStatus.getSelectedItem().toString());
                ps.executeUpdate();
                JOptionPane.showMessageDialog(rootPane, "Data Berhasil Diedit");
            }catch(Exception e){e.printStackTrace();}
        }catch(Exception e){e.printStackTrace();}
    }
    
    public void getDetailKamarTamu(){
        try{
            String sql = "select *from kamartamu where kamar_id='"+static_kamar_id_old+"'";
            ResultSet rs = conn.createStatement().executeQuery(sql);
            while(rs.next()){
                IDKamar.setText(rs.getString("kamar_id"));
                KodeKamarTamu.setText(rs.getString("kamar_code"));
                NamaKamarTamu.setText(rs.getString("kamar_name"));
                description.setText(rs.getString("description"));
                cbStatus.setSelectedItem(rs.getString("status"));
            }
        }catch(Exception e){e.printStackTrace();}
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogKamarTamu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogKamarTamu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogKamarTamu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogKamarTamu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DialogKamarTamu dialog = new DialogKamarTamu(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTextField IDKamar;
    private javax.swing.JTextField KodeKamarTamu;
    private javax.swing.JTextField NamaKamarTamu;
    private javax.swing.JButton buttonClose;
    private javax.swing.JButton buttonSave;
    private javax.swing.JComboBox<String> cbStatus;
    private javax.swing.JTextField description;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
}
