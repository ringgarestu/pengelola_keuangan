/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package asrama.InternalFrame;

import java.awt.Font;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.NumberFormat;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import asrama.RenderingCenter;
import asrama.RenderingRight;
import asrama.connect_DB;

/**
 *
 *
 */
public class InternalTagihanBlmBayar extends javax.swing.JInternalFrame {

    JScrollPane scroll = new JScrollPane();
    JTable table = new JTable();
    static DefaultTableModel tabMode;
    
    Connection conn = new connect_DB().db_connection();
    NumberFormat nf = NumberFormat.getInstance();
    String select_id_bayar_kamar;
    String addQuery = "";
    
    public TableCellRenderer right_ = new RenderingRight();
    public TableCellRenderer center_ = new RenderingCenter();
    
    public InternalTagihanBlmBayar() {
        initComponents();
        nf.setMaximumFractionDigits(0);
        nf.setMinimumFractionDigits(0);
        createTableTagBlmBayar();
        getTagBlmBayar("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        buttonClose = new javax.swing.JButton();

        setTitle("Tagihan Belum Dibayar");
        setFrameIcon(null);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 660, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 345, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setPreferredSize(new java.awt.Dimension(677, 50));
        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        jPanel5.setOpaque(false);
        jPanel2.add(jPanel5);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_START);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        buttonClose.setText("Close");
        buttonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(585, Short.MAX_VALUE)
                .addComponent(buttonClose)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(buttonClose)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCloseActionPerformed
    dispose();        // TODO add your handling code here:
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonCloseActionPerformed

    public void createTableTagBlmBayar(){
        jPanel1.setLayout(new java.awt.BorderLayout());
        scroll.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        scroll.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        scroll.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        Object[] row = {"No Invoice","Kode Anggota/Pelanggan","Jumlah",
            "Keterangan"};
        tabMode = new DefaultTableModel(null,row);
        table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        table.setModel(tabMode);
        table.getColumnModel().getColumn(0).setPreferredWidth(100);
        table.getColumnModel().getColumn(1).setPreferredWidth(250);
        table.getColumnModel().getColumn(2).setPreferredWidth(200);
        table.getColumnModel().getColumn(3).setPreferredWidth(250);
        table.getTableHeader().setFont(new Font("Dialog",Font.BOLD,15));
        table.setFont(new java.awt.Font("Dialog",0,12));
        scroll.getViewport().add(table);
        jPanel1.add(scroll,java.awt.BorderLayout.CENTER);
    }
    
    public void getTagBlmBayar(String addQuery){
        clearTable();
        try {
            String sql = "select * from sewakamar where no_invoice not in (select no_invoice from bayarkamar)";
            ResultSet rs = conn.createStatement().executeQuery(sql);
            while(rs.next()){
                String no_invoice = rs.getString("no_invoice");
                String kodeang = rs.getString("kodeanggota");
                String jumlah = nf.format(rs.getDouble("biaya"));
                String keterangan = "Sewa kamar";
                String [] in_table = {no_invoice,kodeang,jumlah,keterangan};
                tabMode.addRow(in_table);
            }
        }catch(Exception e){e.printStackTrace();}
        
         try {
            String sql = "select * from sewakamartamu where no_invoice not in (select no_invoice from bayarkamartamu)";
            ResultSet rs = conn.createStatement().executeQuery(sql);
            while(rs.next()){
                String no_invoice = rs.getString("no_invoice");
                String kodeang = rs.getString("cust_id");
                String jumlah = nf.format(rs.getDouble("biaya"));
                String keterangan = "Sewa kamar Tamu";
                String [] in_table = {no_invoice,kodeang,jumlah,keterangan};
                tabMode.addRow(in_table);
            }
        }catch(Exception e){e.printStackTrace();}

        try {
            String sql = "select * from sewakios where no_invoice not in (select no_invoice from bayarkios)";
            ResultSet rs = conn.createStatement().executeQuery(sql);
            while(rs.next()){
                String no_invoice = rs.getString("no_invoice");
                String kodeang = rs.getString("cust_id");
                String jumlah = nf.format(rs.getDouble("biaya"));
                String keterangan = "Sewa Kios";
                String [] in_table = {no_invoice,kodeang,jumlah,keterangan};
                tabMode.addRow(in_table);
            }
        }catch(Exception e){e.printStackTrace();}
        
         try {
            String sql = "select * from pelanggaran where no_invoice not in (select no_invoice from bayardenda)";
            ResultSet rs = conn.createStatement().executeQuery(sql);
            while(rs.next()){
                String no_invoice = rs.getString("no_invoice");
                String kodeang = rs.getString("kodeanggota");
                String jumlah = nf.format(rs.getDouble("jumlah"));
                String keterangan = "Denda Pelanggaran";
                String [] in_table = {no_invoice,kodeang,jumlah,keterangan};
                tabMode.addRow(in_table);
            }
        }catch(Exception e){e.printStackTrace();}

    }
    
    public void clearTable(){
        int row = table.getRowCount();
        for(int i = 0; i < row ; i++){
            tabMode.removeRow(0);
        }
    }
    
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonClose;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    // End of variables declaration//GEN-END:variables
}
